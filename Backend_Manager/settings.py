"""
Django settings for Backend_Manager project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import ssl
import os
from pathlib import Path
from elasticsearch import Elasticsearch
from decouple import Config, RepositoryEnv
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# env - database
database_env_path = os.path.join(BASE_DIR, 'databaseSetting.env')
database_env_file = RepositoryEnv(database_env_path)
database_config = Config(database_env_file)
# env - database
auth_env_path = os.path.join(BASE_DIR, 'authSetting.env')
auth_env_file = RepositoryEnv(auth_env_path)
auth_config = Config(auth_env_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = auth_config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CSRF_TRUSTED_ORIGINS = ['http://localhost:5173']
LOGIN_REDIRECT_URL = '/profile/'

GOOGLE_CLIENT_ID = auth_config('GOOGLE_CLIENT_ID')

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
]

LOGIN_REDIRECT_URL = '/admin_app/dashboard'
LOGOUT_REDIRECT_URL = '/admin_app/dashboard'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'corsheaders',
    'rest_framework',
    'api',
    'restaurant_app',
    'admin_app',
    'django_elasticsearch_dsl',
    'user',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),      # access token 有效時間（預設是 5 分鐘）
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),         # refresh token 有效時間（預設是 1 天）
}

# 允許 Vue.js (localhost:5173) 訪問 Django API
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Vue.js 本機運行的網址
    "http://127.0.0.1:5173",
]

ROOT_URLCONF = 'Backend_Manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Backend_Manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default':
    {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': database_config('DB_NAME'),
        'USER': database_config('DB_USER'),
        'PASSWORD': database_config('DB_PASSWORD'),
        'HOST': database_config('DB_HOST'),
        'PORT': database_config('DB_PORT', default='3306'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# 定義log檔案
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'command_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'my_command.log',
            'encoding': 'utf-8',
        },
    },
    'loggers': {
        'food_app.management.commands.process_scraped_files': {
            'handlers': ['command_file'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR/'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

context = ssl.create_default_context()
context.check_hostname = False
context.verify_mode = ssl.CERT_NONE

es_hosts = auth_config('ELASTICSEARCH_HOST', cast=lambda v: [
                       s.strip() for s in v.split(',')])

# es = Elasticsearch(
#     es_hosts,   # Elasticsearch 伺服器地址
#     basic_auth=(auth_config('ELASTICSEARCH_USER'),
#                 auth_config('ELASTICSEARCH_PASSWORD')),
#     ssl_context=context,
#     verify_certs=False
# )

ELASTICSEARCH_DSL = {
    'default': {
        'hosts': auth_config('ELASTICSEARCH_HOST'),  # Elasticsearch 伺服器地址
        'http_auth': (auth_config('ELASTICSEARCH_USER'), auth_config('ELASTICSEARCH_PASSWORD')),
        'ssl_context': context,
        'verify_certs': False,
    },
}

AUTHENTICATION_BACKENDS = [
    'user.backends.EmailBackend',  # 自訂 email / username 登入後端
    'django.contrib.auth.backends.ModelBackend',  # Django 內建 username 登入後端
]
